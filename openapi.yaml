openapi: 3.0.0
info:
  version: 1.0.0
  title: IBM-SL
servers:
  - url: https://ibm-sl-api.deno.dev/
    description: Production server
  - url: http://localhost:8000
    description: Local server
components:
  schemas: {}
  parameters: {}
paths:
  /api/estimate:
    post:
      description: >-
        Accepts a `route` as an input. A `route` consists of one or multiple
        `stages`.The returned value is an object containing a `total_kg` that
        represents the total estimated emission for the given `route` and a list
        numbers representing the estimated emissions for each `stage`.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                anyOf:
                  - type: object
                    properties:
                      transport_form:
                        type: string
                        enum:
                          - truck
                          - etruck
                          - train
                          - aircraft
                          - cargoship
                        description: The vehicle type that is used in this `stage`.
                      distance_km:
                        type: number
                        description: >-
                          The distance of this `stage` of the route in
                          kilometers.
                    required:
                      - transport_form
                      - distance_km
                  - type: object
                    properties:
                      transport_form:
                        type: string
                        enum:
                          - truck
                          - etruck
                        description: The vehicle type that is used in this `stage`.
                      from:
                        type: object
                        properties:
                          city:
                            type: string
                            description: The city query.
                            example: New York
                          country:
                            type: string
                            description: >-
                              The country query that the city should be in.
                              (Optional)
                            examples:
                              - null
                              - United
                              - United States
                        required:
                          - city
                        description: The address of the starting point of this `stage`.
                        examples:
                          - city: New
                          - city: Copen
                            country: Denmark
                      to:
                        type: object
                        properties:
                          city:
                            type: string
                            description: The city query.
                            example: New York
                          country:
                            type: string
                            description: >-
                              The country query that the city should be in.
                              (Optional)
                            examples:
                              - null
                              - United
                              - United States
                        required:
                          - city
                        description: The address of the destination of this `stage`.
                        examples:
                          - city: New
                          - city: Copen
                            country: Denmark
                    required:
                      - transport_form
                      - from
                      - to
                description: >-
                  A `stage` that contains a `transport_form` and either a
                  `distance_km` or `from` and `to`.
                example:
                  transport_form: truck
                  distance_km: 100
              description: List of objects that each represents a `stage` of the route.
              example:
                - transport_form: truck
                  distance_km: 100
                - transport_form: truck
                  from:
                    city: New York
                    country: United States
                  to:
                    city: Los Angeles
                - transport_form: etruck
                  distance_km: 100
                - transport_form: train
                  distance_km: 500
                - transport_form: aircraft
                  distance_km: 300
                - transport_form: cargoship
                  distance_km: 300
      responses:
        '200':
          description: The estimated emission for each `stage` as well as the total.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  total_kg:
                    type: number
                    description: >-
                      The estimated emission for the whole route in kilograms,
                      i.e. the sum of each `stage`.
                  stages:
                    type: array
                    items:
                      type: object
                      properties:
                        kg:
                          type: number
                          description: The estimated emissions for this `stage`.
                        transport_form:
                          type: string
                          enum:
                            - truck
                            - etruck
                            - train
                            - aircraft
                            - cargoship
                          description: The vehicle type that is used in this `stage`.
                      required:
                        - kg
                        - transport_form
                required:
                  - status
                  - total_kg
                  - stages
                description: The estimated emission for each `stage` as well as the total.
                example:
                  status: 200
                  total_kg: 300
                  stages:
                    - kg: 100
                      transport_form: truck
                    - kg: 200
                      transport_form: etruck
        '400':
          description: Returns an error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 500
                  error:
                    type: string
                    example: Error fetching data
                required:
                  - status
                  - error
                description: An error response.
                example:
                  status: 400
                  error: No results found
  /api/suggest:
    post:
      description: 'TODO: Add description'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                city:
                  type: string
                  description: The city query.
                  example: New York
                country:
                  type: string
                  description: The country query that the city should be in. (Optional)
                  examples:
                    - null
                    - United
                    - United States
              required:
                - city
              description: An address containing a city and optionally a country.
              examples:
                - city: New
                - city: Copen
                  country: Denmark
      responses:
        '200':
          application/json:
            schema:
              _def:
                type:
                  _def:
                    unknownKeys: strip
                    catchall:
                      _def:
                        typeName: ZodNever
                    typeName: ZodObject
                  _cached: null
                minLength: null
                maxLength: null
                exactLength: null
                typeName: ZodArray
                openapi:
                  metadata:
                    description: A list of city suggestions and their countries
          description: 'TODO: Add description'
        '400':
          description: Returns and error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 500
                  error:
                    type: string
                    example: Error fetching data
                required:
                  - status
                  - error
                description: An error response.
                example:
                  status: 400
                  error: No results found
